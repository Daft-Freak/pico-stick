Pico Stick RAM transfer format

4 bytes: Magic word: PICO (0x50, 0x49, 0x43, 0x4F) - if wrong then no further data is read.

DVI setup: 
  4 bytes: 
    Res select: (Off, 640x480, 720x576, 800x480, 800x600)   - if doesn't match the boot mode specified over I2C then DVI timing is stopped.
    Unused
    Vertical repeat                                - number of times to repeat each scanline vertically (currently assumed to be 1)
    Output Enable: (On, Off)                       - if off then DVI timing but display is black.
  2 bytes: Horizontal offset (e.g. 0)              - To allow part of the screen to be used, can specify an offset.  This is in pixels (the configured repeat is not taken into account), must be a multiple of 2.
  2 bytes: Horizontal length (e.g. 640)            - Width of the part of the screen to fill.  This is in pixels (the configured repeat is not taken into account), must be a multiple of 2.
  2 bytes: Vertical offset   (e.g. 0)              - To allow part of the screen to be used, can specify an offset.  This is in scanlines (the configured repeat is not taken into account).
  2 bytes: Vertical length   (e.g. 480)            - Height of the part of the screen to fill.  This is in scanlines (the configured repeat is not taken into account), must be a multiple of the vertical repeat.
  
Frame table header:
  2 bytes: Number of frames                        - Number of frame descriptions that follow.  Display will wrap through these frames allowing animations or transitions without flipping the RAMs
  2 bytes: First frame number                      - The first frame to display ater the RAMs are flipped.
  2 bytes: Frame table length                      - Length of each frame table.  Normally same as vertical length.
  1 byte:  Frame rate divider                      - The frame counter is updated at the DVI frame rate divided by this divider.
  1 byte:  Bank number                             - Indication of which RAM bank this is.  When driver notices sees this value is changed it resets the output frame to the configured first frame number.
  1 byte:  Number of palettes per frame            - 0 or 1.
  1 byte:  Palette advance                         - 0 or 1 to indicate whether the palette tables should be indexed by the frame counter.
  2 bytes: Number of sprites in sprite table

Frame tables:
  Number of frames times:
    Frame table length times:
      1 bit: Apply frame offset to line address    - Whether to apply frame memory address offset specifed in I2C register to the line address.
      3 bits: Line mode (RGBA5551, RGB888, 8-bit palette, ...)
      4 bits: Horizontal repeat, must be 1 or 2 (currently assumed to be 1)
      3 bytes: Line address (must be a multiple of 4)

Palette tables:
  Number of palettes per frame, multiplied by number of frames if palette advance is true:
    256 times:
      1 byte: Red
      1 byte: Blue
      1 byte: Green

Sprite table:
  Number of sprites times:
    4 bits: Sprite mode (RGBA5551, RGB888, 8-bit palette, ...)
    4 bits: Sprite submode (Palette index)
    3 bytes: Sprite address (must be a multiple of 4)

Sprite entry:
  1 byte: Width
  1 byte: Height
  Height times:
    1 byte line offset
    1 byte line width
  2 bytes padding if height is even
  Height times:
    Line width times:
      Sprite data

Line and sprite data can be arranged in any way in the rest of the RAM, addressed by the tables above.
The rest of RAM can also store arbitrary data for use by the application.
